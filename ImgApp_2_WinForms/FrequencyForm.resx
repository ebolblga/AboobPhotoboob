<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="textBox2.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>